pipeline {
    agent any
    parameters {
        string(name: 'build_version', defaultValue: 'V1.0', description: 'Build version to use for Docker image')
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/rahmahechmi/devops-demo-project.git'
            }
        }
        stage('Build and Test') {
            steps {
                script {
                    sh 'ls -ltr'
                    // Navigate to the application directory and build the project
                    sh 'cd demo-java-app && mvn clean package -DskipTests'
                }
            }
        }
        stage('Static Code Analysis') {
            environment {
                SONAR_URL = "http://sonarqube:9000"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    script {
                        sh '''
                            cd demo-java-app
                            mvn sonar:sonar \
                                -Dsonar.login=$SONAR_AUTH_TOKEN \
                                -Dsonar.host.url=${SONAR_URL}
                        '''
                    }
                }
            }
        }
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "rahmahechmi/demo-java-app:${params.build_version}"
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    script {
                        // Build Docker image
                        sh '''
                            cd demo-java-app
                            docker build -t ${DOCKER_IMAGE} .
                        '''
                        // Push Docker image
                        sh '''
                            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
                            docker push ${DOCKER_IMAGE}
                        '''
                    }
                }
            }
        }
        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "devops-demo-project"
                GIT_USER_NAME = "rahmahechmi"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    script {
                        sh '''
                            git config --global user.email "hechmirahma198@gmail.com"
                            git config --global user.name "rahmahechmi"
                            sed -i "s/tag: .*/tag: '${params.build_version}'/" helm/app/values.yaml
                            git add helm/app/values.yaml
                            git commit -m "Update deployment image to version ${params.build_version}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
                        '''
                    }
                }
            }
        }
    }
}
